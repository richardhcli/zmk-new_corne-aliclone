#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        td_delete: td_delete {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DELETE";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp DEL>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E       &kp R  &kp T                                   &kp UP                &kp Y      &kp U  &kp I          &kp O    &kp P     &kp BACKSPACE
&td0        &kp A  &kp S  &kp D       &kp F  &kp G                         &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J  &kp K          &kp L    &kp SEMI  &td_delete
&kp LCTRL   &kp Z  &kp X  &kp C       &kp V  &kp B      &rgb_ug RGB_TOG              &kp DOWN              &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp TAB
                          &lt 4 LCMD  &mo 1  &kp SPACE                                                     &kp ENTER  &mo 2  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMSYM";
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DOLLAR    &kp PERCENT                                &mmv MOVE_UP                     &kp CARET     &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&trans  &kp NUMBER_1     &kp NUMBER_2   &kp NUMBER_3  &kp NUMBER_4  &kp N5                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_6  &kp N7            &kp N8             &kp N9                &kp NUMBER_0           &kp GRAVE
&trans  &kp PAGE_DOWN    &kp PAGE_DOWN  &none         &none         &none        &kp C_MUTE                    &mmv MOVE_DOWN                   &none         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS             &kp EQUAL              &kp BACKSLASH
                                        &trans        &trans        &trans                                                                      &kp INS       &kp DEL           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "NAV";
            bindings = <
&trans  &trans  &trans     &kp PG_UP      &trans     &trans                               &mmv MOVE_UP                     &trans   &trans     &kp LS(UP_ARROW)  &trans           &trans    &kp BSPC
&trans  &trans  &kp HOME   &kp PAGE_DOWN  &kp END    &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans   &kp LEFT   &kp LS(DOWN)      &kp RIGHT_ARROW  &trans    &trans
&trans  &trans  &mkp LCLK  &mkp MCLK      &mkp RCLK  &mkp MB5   &trans                    &mmv MOVE_DOWN                   &trans   &mkp LCLK  &mkp MCLK         &mkp RCLK        &mkp MB4  &mkp MB5
                           &trans         &trans     &kp SPACE                                                             &kp RET  &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "CONTROL";
            bindings = <
&studio_unlock  &kp F1           &kp F2          &kp F3        &kp F4        &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &out OUT_BLE  &out OUT_USB  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset       &bootloader     &bt BT_CLR    &trans        &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                                 &trans        &trans        &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
